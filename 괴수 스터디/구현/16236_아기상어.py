from collections import deque

# 아기상어

dx = [1,-1,0,0]
dy = [0,0,-1,1]

## 자신보다 큰 칸은 지나갈 수 없고, 작을경우 지나갈 수 있다.
## 크기가 같은경우 먹을수는없지만 지나갈 수 있다.
## 1초에 상하좌우 인접한 한칸씩이동


# 먹을 수 있는 물고기가 없다면 엄마상어 도움 요청
# 먹을 수 잇는 물고기가 1마리라면, 그 물고기를 먹으러 간다.

# 먹을 수 잇는 물고기가 1마리보다 많다면, 거리가 가장 가까운 물고기를 먹으러 간다.
    # 거리는 아기상어가 있는 칸에서 물고기가 있는 칸으로 이동할 때, 지나야 하는 칸의 개수의 최솟값이다.
    # 거리가 가까운 물고기가 많다면, 가장위
    # 그런 물고기가 여러마리라면, 가장 왼쪽에 있는 물고기를 먹는다.

    # 먹은 칸은 빈칸이 된다.


N = int(input())
arr = [list(map(int, input().split())) for _ in range(N)]

# 아기상어의 위치 탐색

x,y = 0,0

for i in range(N):
    for j in range(N):
        if arr[i][j] == 9:
            arr[i][j] = 0
            x,y = i,j
            break

# 아기상어 크기, 이동, 먹은 카운트
size = 2
move_count = 0
eat = 0
# 방문처리

visit = [[0]*N for _ in range(N)]
